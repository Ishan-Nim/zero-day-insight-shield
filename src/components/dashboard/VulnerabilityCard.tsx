
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";

interface VulnerabilityCardProps {
  type: "high" | "medium" | "low" | "info";
  count: number;
  total: number;
}

export default function VulnerabilityCard({ type, count, total }: VulnerabilityCardProps) {
  const getTitle = () => {
    switch (type) {
      case "high":
        return "High Severity";
      case "medium":
        return "Medium Severity";
      case "low":
        return "Low Severity";
      case "info":
        return "Information";
      default:
        return "Unknown";
    }
  };

  const getDescription = () => {
    switch (type) {
      case "high":
        return "Critical vulnerabilities requiring immediate action";
      case "medium":
        return "Significant vulnerabilities that should be addressed soon";
      case "low":
        return "Minor vulnerabilities that pose limited risk";
      case "info":
        return "Informational findings with no security risk";
      default:
        return "";
    }
  };

  const getColorClass = () => {
    switch (type) {
      case "high":
        return "text-severity-high";
      case "medium":
        return "text-severity-medium";
      case "low":
        return "text-severity-low";
      case "info":
        return "text-severity-info";
      default:
        return "";
    }
  };

  const getProgressClass = () => {
    switch (type) {
      case "high":
        return "bg-severity-high";
      case "medium":
        return "bg-severity-medium";
      case "low":
        return "bg-severity-low";
      case "info":
        return "bg-severity-info";
      default:
        return "";
    }
  };

  const percentage = total > 0 ? Math.round((count / total) * 100) : 0;

  return (
    <Card>
      <CardHeader className="pb-2">
        <CardTitle className="text-base font-medium">
          <span className={getColorClass()}>{getTitle()}</span>
        </CardTitle>
        <CardDescription className="text-xs">{getDescription()}</CardDescription>
      </CardHeader>
      <CardContent>
        <div className="text-3xl font-bold mb-2">
          <span className={getColorClass()}>{count}</span>
        </div>
        <Progress 
          value={percentage} 
          className={`h-1.5 ${getProgressClass()}`}
        />
        <p className="text-xs text-muted-foreground mt-2">
          {percentage}% of total vulnerabilities
        </p>
      </CardContent>
    </Card>
  );
}
